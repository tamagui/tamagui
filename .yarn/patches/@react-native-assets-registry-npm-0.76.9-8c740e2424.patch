diff --git a/path-support.js b/path-support.js
index 7d9388ad12567ba99d1c02650cb25c16a052d3de..fd6a8efad5629904bc2aceb692d1a3f1d6f389f6 100644
--- a/path-support.js
+++ b/path-support.js
@@ -10,8 +10,6 @@
 
 'use strict';
 
-import type {PackagerAsset} from './registry.js';
-
 const androidScaleSuffix = {
   '0.75': 'ldpi',
   '1': 'mdpi',
@@ -27,7 +25,7 @@ const ANDROID_BASE_DENSITY = 160;
  * FIXME: using number to represent discrete scale numbers is fragile in essence because of
  * floating point numbers imprecision.
  */
-function getAndroidAssetSuffix(scale: number): string {
+function getAndroidAssetSuffix(scale) {
   if (scale.toString() in androidScaleSuffix) {
     // $FlowFixMe[invalid-computed-prop]
     return androidScaleSuffix[scale.toString()];
@@ -53,9 +51,9 @@ const drawableFileTypes = new Set([
 ]);
 
 function getAndroidResourceFolderName(
-  asset: PackagerAsset,
-  scale: number,
-): string | $TEMPORARY$string<'raw'> {
+  asset,
+  scale,
+) {
   if (!drawableFileTypes.has(asset.type)) {
     return 'raw';
   }
@@ -73,7 +71,7 @@ function getAndroidResourceFolderName(
   return 'drawable-' + suffix;
 }
 
-function getAndroidResourceIdentifier(asset: PackagerAsset): string {
+function getAndroidResourceIdentifier(asset) {
   return (getBasePath(asset) + '/' + asset.name)
     .toLowerCase()
     .replace(/\//g, '_') // Encode folder structure in file name
@@ -81,7 +79,7 @@ function getAndroidResourceIdentifier(asset: PackagerAsset): string {
     .replace(/^assets_/, ''); // Remove "assets_" prefix
 }
 
-function getBasePath(asset: PackagerAsset): string {
+function getBasePath(asset) {
   const basePath = asset.httpServerLocation;
   return basePath.startsWith('/') ? basePath.slice(1) : basePath;
 }
diff --git a/registry.js b/registry.js
index 64b2735d3bb5284bd2450bf0d06115c3de5dcf80..3851d923e188363b9c7c4c440d6b4ae3ecd2a028 100644
--- a/registry.js
+++ b/registry.js
@@ -10,31 +10,15 @@
 
 'use strict';
 
-export type AssetDestPathResolver = 'android' | 'generic';
+const assets = [];
 
-export type PackagerAsset = {
-  +__packager_asset: boolean,
-  +fileSystemLocation: string,
-  +httpServerLocation: string,
-  +width: ?number,
-  +height: ?number,
-  +scales: Array<number>,
-  +hash: string,
-  +name: string,
-  +type: string,
-  +resolver?: AssetDestPathResolver,
-  ...
-};
-
-const assets: Array<PackagerAsset> = [];
-
-function registerAsset(asset: PackagerAsset): number {
+function registerAsset(asset) {
   // `push` returns new array length, so the first asset will
   // get id 1 (not 0) to make the value truthy
   return assets.push(asset);
 }
 
-function getAssetByID(assetId: number): PackagerAsset {
+function getAssetByID(assetId) {
   return assets[assetId - 1];
 }
 
